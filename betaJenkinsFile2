pipeline {
    agent any
    environment {
        def pathVariable = "s3://sha-buck-01/${env.JOB_NAME}/${env.BUILD_ID}/"
    }

    stages {
        stage('Job Started notification') {
            steps {
                echo "Job Started notification ..."   
                script {
                    emailext (
                        mimeType: 'text/html',
                        to:"shanetownsend24@hotmail.com", 
                        subject: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'", 
                        body: """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                        <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""
                    )
                }    
            }
        }
    
        stage ('Compile Stage') {

            steps {
                withMaven(maven : 'Maven') {
                    echo "Compile Stage ..."
                    sh 'mvn compile'
                }
            }
        }
        
        stage ('Test Stage') {

            steps {
                withMaven(maven : 'Maven') {
                    script {
                        try {
                            sh 'mvn test'
                        }
                        catch (exc) {
                            echo 'Unit Testing failed! - Mark build as unstable'
                            currentBuild.result = 'UNSTABLE'    
                        }
                    }        
                }
            }
        }
            
        
        stage ('Package Stage') {

            steps {
                withMaven(maven : 'Maven') {
                    echo "Package Stage ..."
                    sh 'mvn package'
                }
            }
        }   
        
        
        stage('SonarQube Analysis Stage') {
            steps {
                echo "SonarQube Analysis Stage ..."   
            }
        }
        
        stage('Quality Gate Stage') {
            steps {
                echo "Quality Gate Stage ..."   
            }
        }
        
        stage ('Rename Artifacts Stage') {

            steps {
                echo "Rename Artifacts Stage ..."
                sh 'mv /var/lib/jenkins/workspace/first-pipeline/target/rest-hateoas-0.0.1-SNAPSHOT.war /var/lib/jenkins/workspace/first-pipeline/target/simple-rest.war'
                sh 'mv /var/lib/jenkins/workspace/first-pipeline/rest-hateoas-0.0.1-SNAPSHOT.pom /var/lib/jenkins/workspace/first-pipeline/simple-rest.pom'
            }
        }   
        
       stage ('Deploy Artifacts to S3 Repository Stage') {

           steps { 
                echo "Deploy to S3 Repository Stage; path name=${pathVariable} ..."
                sh 'aws s3 cp /var/lib/jenkins/workspace/first-pipeline/target/simple-rest.war  ${pathVariable}'
                sh 'aws s3 cp /var/lib/jenkins/workspace/first-pipeline/simple-rest.pom  ${pathVariable}'
            }
        }   
        
        // stage ('Deploy To Tomcat Server Stage') {
            // steps {
                // sshagent(['tomcat-dev']) {
                    // echo "Deploy To Tomcat Server Stage ..."
                    // sh 'scp -v -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/first-pipeline/target/simple-rest.war ec2-user@ec2-34-251-146-237.eu-west-1.compute.amazonaws.com:/home/ec2-user/apache-tomcat-8.5.34/webapps/' 
                // }
            // }    
        // } 
        
        stage ('Integration Testing Stage') {
            steps {                   
                echo "Integration Testing Stage ..."
                script {
                    try {
                        sh 'docker run postman/newman_ubuntu1404 run "https://raw.githubusercontent.com/ShaneTownsend/SimpleRestResource/master/DummyTest" --disable-unicode --color off'
                        //sh 'docker run -t postman/newman_ubuntu1404 run "https://www.getpostman.com/collections/8a0c9bc08f062d12dcda" --disable-unicode --color off'
                        //sh 'docker run -t postman/newman_ubuntu1404 run "https://raw.githubusercontent.com/ShaneTownsend/SimpleRestResource/master/Simple-Rest-Service-Tests.postman_collection.json" --environment "https://raw.githubusercontent.com/ShaneTownsend/SimpleRestResource/master/PostmanEnvironmentConfigurations" --disable-unicode --color off'
                    }
                    catch (exc) {
                        echo 'Integration Testing failed! - Mark build as unstable'
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }   
        
    }
    post {
        always {  
            echo 'This will always run - This is a catch ALL'  
        }  
        success {  
            echo 'This will run only if successful'  
            script {
                emailext (
                    mimeType: 'text/html',
                    to:"shanetownsend24@hotmail.com",
                    subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                    body: """<p>SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""
                )
            }        
        }  
        failure {  
            echo 'This will run only if failure - usually a red status'   
            script {
                emailext (
                    mimeType: 'text/html',
                    to:"shanetownsend24@hotmail.com",
                    subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                    attachLog: true,
                    compressLog: true,
                    body: """<p>FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""
                )
            } 
        }  
        unstable {  
            echo 'This will run only if the run was marked as unstable - usually a yellow status'  
            script {
                emailext (
                    mimeType: 'text/html',
                    to:"shanetownsend24@hotmail.com",
                    subject: "UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                    attachLog: true,
                    compressLog: true,
                    body: """<p>UNSTABLE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at "<a href="${env.BUILD_URL}">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>"""
                )
            } 
        }  
         
    }
}
